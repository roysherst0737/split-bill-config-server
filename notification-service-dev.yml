server:
  port: 8400

spring:
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  jpa:
    show-sql: true
    defer-datasource-initialization: true
    generate-ddl: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:notification_service
    username: sa
    password: password
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: notification-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.menstalk.notificationservice.dto
        client.id: notification-service
      # new topic mapping configuration
      # 1. newUserTopic mapping
      listener:
        simple:
          # assign topics manually instead of using a group
          topics: notifictaionTopics
          # configuration for newUserTopic mapping
          - id: newUserTopic-consumer
            auto-startup: true
            auto-offset-reset: earliest
            concurrency: 3
            # match the topic name and class type with the mapping
            topic-pattern: newUserTopic
            message-handler:
              type: record
              method: handleMessage
              # match the class type with the mapping
              record-type: com.menstalk.notificationservice.dto.NewUserRequest
          # configuration for newBillTopic mapping
          - id: newBillTopic-consumer
            auto-startup: true
            auto-offset-reset: earliest
            concurrency: 3
            # match the topic name and class type with the mapping
            topic-pattern: newBillTopic
            message-handler:
              type: record
              method: handleMessage
              # match the class type with the mapping
              record-type: com.menstalk.notificationservice.dto.NewBillRequest

    # bootstrap-servers: localhost:9092
    # consumer:
    #   group-id: notification-consumer
    #   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    #   properties:
    #     spring:
    #       json:
    #         type:
    #           mapping: 
    #             newUserTopic: com.menstalk.notificationservice.dto.NewUserRequest
    #             newBillTopic: com.menstalk.notificationservice.dto.NewBillRequest
    #   listener:
    #     type: record
    #     ack-mode: manual_immediate
    #     concurrency: 3
    #     topics:
    #       - name: newUserTopic
    #         concurrency: 5
    #       - name: newBillTopic
    #         concurrency: 5

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true

# Actuator Prometheus Endpoint
management:
  endpoints:
    web:
      exposure:
        include: prometheus